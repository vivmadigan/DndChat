@* Views/Chat/Index.cshtml *@
@using Microsoft.AspNetCore.Authorization
@{
    // Is the current HTTP user authenticated?
    var isAuthed = User?.Identity?.IsAuthenticated ?? false;

    // Identity sets User.Identity.Name to UserName by default.
    // If you later want DisplayName instead, you can change this in one place.
    var userName = User?.Identity?.Name ?? "";
}

<div class="container py-4 text-center"
     id="root"
     data-joined="@(isAuthed.ToString().ToLower())"
     data-username="@userName">

    <h1 class="display-4">Welcome to DndChat!</h1>

    @* If not authenticated, nudge the user to Login or Register.
       These links hit our AccountController actions below. *@
    @if (!isAuthed)
    {
        <p class="mt-3">
            Please <a asp-controller="Account" asp-action="Login">log in</a>
            or <a asp-controller="Account" asp-action="Register">create an account</a> to start chatting.
        </p>
    }

    @* MAIN CHAT AREA
       - We only show this when the user is authenticated.
       - chat.js will read data-joined and data-username from #root and
         start the SignalR connection. No change required in chat.js. *@
    <div id="chatCard" class="card mx-auto @(isAuthed ? "" : "d-none") chat-card">
        <div class="card-header">Global chat</div>

        @* Scrollable message list. chat.js will append <li> items here. *@
        <ul id="messagesList" class="list-group list-group-flush messages-list"></ul>

        <div class="card-body">
            <div class="input-group">
                @* The input and button are disabled if somehow rendered for a non authed user. *@
                <input id="messageInput"
                       class="form-control"
                       placeholder="Type a message"
                       autocomplete="off"
                       @(isAuthed ? "" : "disabled") />

                <button id="sendBtn"
                        type="button"
                        class="btn btn-success"
                        @(isAuthed ? "" : "disabled")>
                    Chat
                </button>
            </div>
        </div>
    </div>

    <div id="status" class="mt-3"></div>
</div>

@section Scripts {
    @* Client side validation scripts if you use them elsewhere *@
    <partial name="_ValidationScriptsPartial" />
    @* SignalR browser client first, then your app script *@
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
    <script src="~/js/chat.js" asp-append-version="true"></script>
}
